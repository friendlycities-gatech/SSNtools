temp2 = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$Var2, ',')))
edgeMiddleTable$node1_lon = as.numeric(temp$V1)
edgeMiddleTable$node1_lat = as.numeric(temp$V2)
edgeMiddleTable$node2_lon = as.numeric(temp2$V1)
edgeMiddleTable$node2_lat = as.numeric(temp2$V2)
edgeMiddleTable$dist = sqrt((edgeMiddleTable$node1_lat - edgeMiddleTable$node2_lat)**2 + (edgeMiddleTable$node1_lon - edgeMiddleTable$node2_lon) **2)
return(edgeMiddleTable$dist)
}
#step 1: generate an edge table for all node pairs
edgeTable = as.data.frame(expand.grid(df$label, df$label))
edgeTable = edgeTable[edgeTable$Var1 != edgeTable$Var2, ]
edgeTable = edgeTable[!duplicated(edgeTable), ]
edgeDistancefromEdgeTable(edgeTable, df)
ks.test(edgeDistancefromEdgeTable(df, df2), edgeDistancefromEdgeTable(edgeTable, df2))
ks.test(edgeDistancefromEdgeTable(df2, df), edgeDistancefromEdgeTable(edgeTable, df))
edgeDistancefromEdgeTable(edgeTable, df)
f
df = data.frame(label=c('A','B','C','D','E','F','G'),
lon=c(1,2,2,3,4,5,5),
lat=c(3,3,0,0,3,1,2))
ks.test(edgeDistancefromEdgeTable(df2, df), edgeDistancefromEdgeTable(edgeTable, df))
df = data.frame(label=c('A','B','C','D','E','F','G'),
lon=c(1,2,2,3,4,5,5),
lat=c(3,3,0,0,3,1,2))
df2 = data.frame(Source = c('A', 'C', 'E'),
Target = c('B', 'D', 'F'))
#step 1: generate an edge table for all node pairs
edgeTable = as.data.frame(expand.grid(df$label, df$label))
edgeTable = edgeTable[edgeTable$Var1 != edgeTable$Var2, ]
edgeTable = edgeTable[!duplicated(edgeTable), ]
edgeDistancefromEdgeTable = function(edgeTable, nodeTable) {
edgeTable = merge(edgeTable, nodeTable, by.x="Var1", by.y='label', all.x = TRUE, all.y=TRUE)
edgeTable = merge(edgeTable, nodeTable, by.x="Var2", by.y='label', all.x = TRUE, all.y=TRUE)
edgeTable$edgeMiddle.lon = (edgeTable$lon.x+edgeTable$lon.y)/2
edgeTable$edgeMiddle.lat = (edgeTable$lat.x+edgeTable$lat.y)/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
edgeMiddleTable = as.data.frame(expand.grid(edgeTable$EdgeMiddleLabels, edgeTable$EdgeMiddleLabels))
edgeMiddleTable = edgeMiddleTable[edgeMiddleTable$Var1 != edgeMiddleTable$Var2, ]
edgeMiddleTable$Var1 = as.character(edgeMiddleTable$Var1)
edgeMiddleTable$Var2 = as.character(edgeMiddleTable$Var2)
temp = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$Var1, ',')))
temp2 = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$Var2, ',')))
edgeMiddleTable$node1_lon = as.numeric(temp$V1)
edgeMiddleTable$node1_lat = as.numeric(temp$V2)
edgeMiddleTable$node2_lon = as.numeric(temp2$V1)
edgeMiddleTable$node2_lat = as.numeric(temp2$V2)
edgeMiddleTable$dist = sqrt((edgeMiddleTable$node1_lat - edgeMiddleTable$node2_lat)**2 + (edgeMiddleTable$node1_lon - edgeMiddleTable$node2_lon) **2)
return(edgeMiddleTable$dist)
}
edgeDistancefromEdgeTable(edgeTable, df)
edgeDistancefromEdgeTable = function(eT, nT) {
edgeTable = merge(eT, nT, by.x="Var1", by.y='label', all.x = TRUE, all.y=TRUE)
edgeTable = merge(edgeTable, nT, by.x="Var2", by.y='label', all.x = TRUE, all.y=TRUE)
edgeTable$edgeMiddle.lon = (edgeTable$lon.x+edgeTable$lon.y)/2
edgeTable$edgeMiddle.lat = (edgeTable$lat.x+edgeTable$lat.y)/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
edgeMiddleTable = as.data.frame(expand.grid(edgeTable$EdgeMiddleLabels, edgeTable$EdgeMiddleLabels))
edgeMiddleTable = edgeMiddleTable[edgeMiddleTable$Var1 != edgeMiddleTable$Var2, ]
edgeMiddleTable$Var1 = as.character(edgeMiddleTable$Var1)
edgeMiddleTable$Var2 = as.character(edgeMiddleTable$Var2)
temp = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$Var1, ',')))
temp2 = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$Var2, ',')))
edgeMiddleTable$node1_lon = as.numeric(temp$V1)
edgeMiddleTable$node1_lat = as.numeric(temp$V2)
edgeMiddleTable$node2_lon = as.numeric(temp2$V1)
edgeMiddleTable$node2_lat = as.numeric(temp2$V2)
edgeMiddleTable$dist = sqrt((edgeMiddleTable$node1_lat - edgeMiddleTable$node2_lat)**2 + (edgeMiddleTable$node1_lon - edgeMiddleTable$node2_lon) **2)
return(edgeMiddleTable$dist)
}
edgeDistancefromEdgeTable(edgeTable, df)
edgeDistancefromEdgeTable(df2, df)
rename(edgeTable) = c('Source', 'Target')
rename(edgeTable) <- c('Source', 'Target')
colnames(edgeTable) <- c('Source', 'Target')
edgeDistancefromEdgeTable = function(eT, nT) {
edgeTable = merge(eT, nT, by.x="Source", by.y='label', all.x = TRUE, all.y=TRUE)
edgeTable = merge(edgeTable, nT, by.x="Target", by.y='label', all.x = TRUE, all.y=TRUE)
edgeTable$edgeMiddle.lon = (edgeTable$lon.x+edgeTable$lon.y)/2
edgeTable$edgeMiddle.lat = (edgeTable$lat.x+edgeTable$lat.y)/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
edgeMiddleTable = as.data.frame(expand.grid(edgeTable$EdgeMiddleLabels, edgeTable$EdgeMiddleLabels))
edgeMiddleTable = edgeMiddleTable[edgeMiddleTable$Var1 != edgeMiddleTable$Var2, ]
edgeMiddleTable$Var1 = as.character(edgeMiddleTable$Var1)
edgeMiddleTable$Var2 = as.character(edgeMiddleTable$Var2)
temp = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$Var1, ',')))
temp2 = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$Var2, ',')))
edgeMiddleTable$node1_lon = as.numeric(temp$V1)
edgeMiddleTable$node1_lat = as.numeric(temp$V2)
edgeMiddleTable$node2_lon = as.numeric(temp2$V1)
edgeMiddleTable$node2_lat = as.numeric(temp2$V2)
edgeMiddleTable$dist = sqrt((edgeMiddleTable$node1_lat - edgeMiddleTable$node2_lat)**2 + (edgeMiddleTable$node1_lon - edgeMiddleTable$node2_lon) **2)
return(edgeMiddleTable$dist)
}
ks.test(edgeDistancefromEdgeTable(df2, df), edgeDistancefromEdgeTable(edgeTable, df))
edgeTable = as.data.frame(expand.grid(NYCMafiaNodes$label, NYCMafiaNodes$label))
edgeTable = edgeTable[edgeTable$Var1 != edgeTable$Var2, ]
edgeTable = edgeTable[!duplicated(edgeTable), ]
colnames(edgeTable) <- c('Source', 'Target')
ks.test(edgeDistancefromEdgeTable(NYCMafiaEdges, NYCMafiaNodes), edgeDistancefromEdgeTable(edgeTable, NYCMafiaNodes))
edgeDistancefromEdgeTable(NYCMafiaEdges, NYCMafiaNodes)
edgeDistancefromEdgeTable(edgeTable, NYCMafiaNodes)
colnames(NYCMafiaNodes)
colnames(NYCMafiaEdges)
edgeDistancefromEdgeTable = function(eT, nT, source_name, target_name, label_name, lon_name, lat_name) {
edgeTable = merge(eT, nT, by.x=source_name, by.y=label_name, all.x = TRUE, all.y=TRUE)
edgeTable = merge(edgeTable, nT, by.x=target_name, by.y=label_name, all.x = TRUE, all.y=TRUE)
edgeTable$edgeMiddle.lon = (edgeTable[[paste0(lon_name, '.x')]]+edgeTable[[paste0(lon_name, '.y')]])/2
edgeTable$edgeMiddle.lat = (edgeTable[[paste0(lat_name, '.x')]]+edgeTable[[paste0(lat_name, '.y')]])/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
edgeMiddleTable = as.data.frame(expand.grid(edgeTable$EdgeMiddleLabels, edgeTable$EdgeMiddleLabels))
edgeMiddleTable = edgeMiddleTable[edgeMiddleTable$Var1 != edgeMiddleTable$Var2, ]
edgeMiddleTable$Var1 = as.character(edgeMiddleTable$Var1)
edgeMiddleTable$Var2 = as.character(edgeMiddleTable$Var2)
temp = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$Var1, ',')))
temp2 = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$Var2, ',')))
edgeMiddleTable$node1_lon = as.numeric(temp$V1)
edgeMiddleTable$node1_lat = as.numeric(temp$V2)
edgeMiddleTable$node2_lon = as.numeric(temp2$V1)
edgeMiddleTable$node2_lat = as.numeric(temp2$V2)
edgeMiddleTable$dist = sqrt((edgeMiddleTable$node1_lat - edgeMiddleTable$node2_lat)**2 + (edgeMiddleTable$node1_lon - edgeMiddleTable$node2_lon) **2)
return(edgeMiddleTable$dist)
}
ks.test(edgeDistancefromEdgeTable(NYCMafiaEdges, NYCMafiaNodes, 'Source', 'Target', 'label', 'LonX', 'LatY'),
edgeDistancefromEdgeTable(edgeTable, NYCMafiaNodes, 'Source', 'Target', 'label', 'LonX', 'LatY'))
ks.test(edgeDistancefromEdgeTable(df2, df, 'Source', 'Target', 'label', 'lon', 'lat'),
edgeDistancefromEdgeTable(edgeTable, df, 'Source', 'Target', 'label', 'lon', 'lat'))
allEdgesTable = as.data.frame(expand.grid(NYCMafiaNodes$label, NYCMafiaNodes$label))
allEdgesTable = allEdgesTable[allEdgesTable$Var1 != allEdgesTable$Var2, ]
allEdgesTable = allEdgesTable[!duplicated(allEdgesTable), ]
colnames(allEdgesTable) <- c('Source', 'Target')
allEdgesTable = as.data.frame(expand.grid(NYCMafiaNodes$label, NYCMafiaNodes$label))
allEdgesTable = allEdgesTable[allEdgesTable$Var1 != allEdgesTable$Var2, ]
allEdgesTable = allEdgesTable[!duplicated(allEdgesTable), ]
colnames(allEdgesTable) <- c('Source', 'Target')
allEdgesTable = as.data.frame(expand.grid(df$label, df$label))
allEdgesTable = allEdgesTable[allEdgesTable$Var1 != allEdgesTable$Var2, ]
allEdgesTable = allEdgesTable[!duplicated(allEdgesTable), ]
colnames(allEdgesTable) <- c('Source', 'Target')
allEdgesTable
allEdgesTable = as.data.frame(expand.grid(df$label, df$label))
allEdgesTable = as.data.frame(expand.grid(df$label, df$label))
df = data.frame(label=c('A','B','C','D','E','F','G'),
lon=c(1,2,2,3,4,5,5),
lat=c(3,3,0,0,3,1,2))
df2 = data.frame(Source = c('A', 'C', 'E'),
Target = c('B', 'D', 'F'))
allEdgesTable = as.data.frame(expand.grid(df$label, df$label))
allEdgesTable = allEdgesTable[allEdgesTable$Var1 != allEdgesTable$Var2, ]
allEdgesTable = allEdgesTable[!duplicated(allEdgesTable), ]
colnames(allEdgesTable) <- c('Source', 'Target')
allEdgesTable
edgeDistancefromEdgeTable = function(eT, nT, source_name, target_name, label_name, lon_name, lat_name) {
edgeTable = merge(eT, nT, by.x=source_name, by.y=label_name, all.x = TRUE, all.y=TRUE)
edgeTable = merge(edgeTable, nT, by.x=target_name, by.y=label_name, all.x = TRUE, all.y=TRUE)
edgeTable$edgeMiddle.lon = (edgeTable[[paste0(lon_name, '.x')]]+edgeTable[[paste0(lon_name, '.y')]])/2
edgeTable$edgeMiddle.lat = (edgeTable[[paste0(lat_name, '.x')]]+edgeTable[[paste0(lat_name, '.y')]])/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
edgeMiddleTable = as.data.frame(expand.grid(edgeTable$EdgeMiddleLabels, edgeTable$EdgeMiddleLabels))
edgeMiddleTable = edgeMiddleTable[edgeMiddleTable$Var1 != edgeMiddleTable$Var2, ]
edgeMiddleTable$Var1 = as.character(edgeMiddleTable$Var1)
edgeMiddleTable$Var2 = as.character(edgeMiddleTable$Var2)
temp = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$Var1, ',')))
temp2 = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$Var2, ',')))
edgeMiddleTable$node1_lon = as.numeric(temp$V1)
edgeMiddleTable$node1_lat = as.numeric(temp$V2)
edgeMiddleTable$node2_lon = as.numeric(temp2$V1)
edgeMiddleTable$node2_lat = as.numeric(temp2$V2)
edgeMiddleTable$dist = sqrt((edgeMiddleTable$node1_lat - edgeMiddleTable$node2_lat)**2 + (edgeMiddleTable$node1_lon - edgeMiddleTable$node2_lon) **2)
return(edgeMiddleTable$dist)
}
colnames(df2)
colnames(df)
edgeDistancefromEdgeTable(allEdgesTable, df, 'Source', 'Target', 'label', 'lon', 'lat')
ks.test(edgeDistancefromEdgeTable(df2, df, 'Source', 'Target', 'label', 'lon', 'lat'),
edgeDistancefromEdgeTable(allEdgesTable, df, 'Source', 'Target', 'label', 'lon', 'lat'))
allEdgesTable = as.data.frame(expand.grid(MafiaNodes$label, MafiaNodes$label))
allEdgesTable = allEdgesTable[allEdgesTable$Var1 != allEdgesTable$Var2, ]
allEdgesTable = allEdgesTable[!duplicated(allEdgesTable), ]
colnames(allEdgesTable) <- c('Source', 'Target')
allEdgesTable = as.data.frame(expand.grid(MafiaNodes$label, MafiaNodes$label))
allEdgesTable = allEdgesTable[allEdgesTable$Var1 != allEdgesTable$Var2, ]
allEdgesTable = allEdgesTable[!duplicated(allEdgesTable), ]
allEdgesTable = as.data.frame(expand.grid(MafiaNodes$label, MafiaNodes$label))
colnames(MafiaNodes)
allEdgesTable = as.data.frame(expand.grid(NYCMafiaNodes$label, NYCMafiaNodes$label))
allEdgesTable = allEdgesTable[allEdgesTable$Var1 != allEdgesTable$Var2, ]
allEdgesTable = allEdgesTable[!duplicated(allEdgesTable), ]
colnames(allEdgesTable) <- c('Source', 'Target')
kk = edgeDistancefromEdgeTable(allEdgesTable, NYCMafiaNodes, 'Source', 'Target', 'label', 'LonX', 'LatY')
test=NYCMafiaNodes %>% rename(lon = LonX, lat=LatY)
kk = edgeDistancefromEdgeTable(allEdgesTable, test, 'Source', 'Target', 'label', 'lon', 'lat')
kk = edgeDistancefromEdgeTable(NYCMafiaEdges, NYCMafiaNodes, 'Source', 'Target', 'label', 'LonX', 'LatY')
kk[1:100]
298 * 287
85526 * 85526-1
eT = allEdgesTable
nT = NYCMafiaNodes
edgeTable = merge(eT, nT, by.x=source_name, by.y=label_name, all.x = TRUE, all.y=TRUE)
edgeTable = merge(eT, nT, by.x='Source', by.y='label', all.x = TRUE, all.y=TRUE)
edgeTable = merge(eT, nT, by.x='Source', by.y='label', all.x = TRUE, all.y=TRUE)
edgeTable = merge(edgeTable, nT, by.x='Target', by.y='label', all.x = TRUE, all.y=TRUE)
edgeTable$edgeMiddle.lon = (edgeTable[[paste0(lon_name, '.x')]]+edgeTable[[paste0(lon_name, '.y')]])/2
edgeTable$edgeMiddle.lon = (edgeTable[[paste0('LonX', '.x')]]+edgeTable[[paste0('LonX', '.y')]])/2
edgeTable$edgeMiddle.lat = (edgeTable[[paste0('LatY', '.x')]]+edgeTable[[paste0('LatY', '.y')]])/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
edgeMiddleTable = as.data.frame(expand.grid(edgeTable$EdgeMiddleLabels, edgeTable$EdgeMiddleLabels))
88506 * 88505
eT = NYCMafiaEdges
nT = NYCMafiaNodes
edgeTable = merge(eT, nT, by.x='Source', by.y='label', all.x = TRUE, all.y=TRUE)
edgeTable = merge(edgeTable, nT, by.x='Target', by.y='label', all.x = TRUE, all.y=TRUE)
edgeTable$edgeMiddle.lon = (edgeTable[[paste0('LonX', '.x')]]+edgeTable[[paste0('LonX', '.y')]])/2
edgeTable$edgeMiddle.lat = (edgeTable[[paste0('LatY', '.x')]]+edgeTable[[paste0('LatY', '.y')]])/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
edgeMiddleTable = as.data.frame(expand.grid(edgeTable$EdgeMiddleLabels, edgeTable$EdgeMiddleLabels))
edgeMiddleTable = edgeMiddleTable[edgeMiddleTable$Var1 != edgeMiddleTable$Var2, ]
edgeMiddleTable$Var1 = as.character(edgeMiddleTable$Var1)
edgeMiddleTable$Var2 = as.character(edgeMiddleTable$Var2)
temp = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$Var1, ',')))
temp2 = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$Var2, ',')))
edgeMiddleTable$node1_lon = as.numeric(temp$V1)
View(temp2)
edgeMiddleTable$node1_lat = as.numeric(temp$V2)
edgeMiddleTable$node2_lon = as.numeric(temp2$V1)
edgeMiddleTable$node2_lat = as.numeric(temp2$V2)
edgeMiddleTable$dist = sqrt((edgeMiddleTable$node1_lat - edgeMiddleTable$node2_lat)**2 + (edgeMiddleTable$node1_lon - edgeMiddleTable$node2_lon) **2)
View(edgeMiddleTable)
edgeTable = merge(eT, nT, by.x='Source', by.y='label', all.x = TRUE, all.y=TRUE)
edgeTable = merge(edgeTable, nT, by.x='Target', by.y='label', all.x = TRUE, all.y=TRUE)
edgeTable$edgeMiddle.lon = (edgeTable[[paste0('LonX', '.x')]]+edgeTable[[paste0('LonX', '.y')]])/2
edgeTable$edgeMiddle.lat = (edgeTable[[paste0('LatY', '.x')]]+edgeTable[[paste0('LatY', '.y')]])/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
paste(c(1,2), ',')
paste(1，2)
paste(1,2)
paste(c(1,2))
expand.grid(c(1,2,3))
expand.grid(c(1,2,3), c(1,2,3))
combn(c(1,2,3), 2)
combn(c(1,2,3), 1)
combn(c(1,2,3), 2)
combn(c(1,2,3), 2)[,1]
combn(c(1,2,3), 2)[,2]
combn(c(1,2,3), 2)[,2]
t(combn(c(1,2,3), 2))
as.data.frame(t(combn(c(1,2,3), 2)))
#step 1: generate an edge table for all node pairs
edgeTable = as.data.frame(t(combn(df$labels, 2)))
edgeTable = edgeTable[edgeTable$Var1 != edgeTable$Var2, ]
edgeTable = edgeTable[!duplicated(edgeTable), ]
colnames(edgeTable) <- c('Source', 'Target')
#step 1: generate an edge table for all node pairs
edgeTable = as.data.frame(t(combn(df$label, 2)))
edgeTable = edgeTable[edgeTable$Var1 != edgeTable$Var2, ]
edgeTable = edgeTable[!duplicated(edgeTable), ]
colnames(edgeTable) <- c('Source', 'Target')
#step 1: generate an edge table for all node pairs
edgeTable = as.data.frame(t(combn(df$label, 2)))
edgeTable = edgeTable[edgeTable$V1 != edgeTable$V2, ]
edgeTable = edgeTable[!duplicated(edgeTable), ]
colnames(edgeTable) <- c('Source', 'Target')
edgeDistancefromEdgeTable = function(eT, nT, source_name, target_name, label_name, lon_name, lat_name) {
edgeTable = merge(eT, nT, by.x=source_name, by.y=label_name, all.x = TRUE, all.y=TRUE)
edgeTable = merge(edgeTable, nT, by.x=target_name, by.y=label_name, all.x = TRUE, all.y=TRUE)
edgeTable$edgeMiddle.lon = (edgeTable[[paste0(lon_name, '.x')]]+edgeTable[[paste0(lon_name, '.y')]])/2
edgeTable$edgeMiddle.lat = (edgeTable[[paste0(lat_name, '.x')]]+edgeTable[[paste0(lat_name, '.y')]])/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
edgeMiddleTable = as.data.frame(t(combn(edgeTable$EdgeMiddleLabels, 2))) #expand.grid(edgeTable$EdgeMiddleLabels, edgeTable$EdgeMiddleLabels)
edgeMiddleTable = edgeMiddleTable[edgeMiddleTable$V1 != edgeMiddleTable$V2, ]
edgeMiddleTable$V1 = as.character(edgeMiddleTable$V1)
edgeMiddleTable$V2 = as.character(edgeMiddleTable$V2)
temp = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$V1, ',')))
temp2 = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$V2, ',')))
edgeMiddleTable$node1_lon = as.numeric(temp$V1)
edgeMiddleTable$node1_lat = as.numeric(temp$V2)
edgeMiddleTable$node2_lon = as.numeric(temp2$V1)
edgeMiddleTable$node2_lat = as.numeric(temp2$V2)
edgeMiddleTable$dist = sqrt((edgeMiddleTable$node1_lat - edgeMiddleTable$node2_lat)**2 + (edgeMiddleTable$node1_lon - edgeMiddleTable$node2_lon) **2)
return(edgeMiddleTable$dist)
}
allEdgesTable = as.data.frame(t(combn(NYCMafiaNodes$label, 2)))
allEdgesTable = allEdgesTable[allEdgesTable$V1 != allEdgesTable$V2, ]
allEdgesTable = allEdgesTable[!duplicated(allEdgesTable), ]
colnames(allEdgesTable) <- c('Source', 'Target')
kk = edgeDistancefromEdgeTable(allEdgesTable, NYCMafiaNodes, 'Source', 'Target', 'label', 'LonX', 'LatY')
kk = edgeDistancefromEdgeTable(NYCMafiaEdges, NYCMafiaNodes, 'Source', 'Target', 'label', 'lon', 'lat')
eT = NYCMafiaEdges
nT = NYCMafiaNodes
edgeTable = merge(eT, nT, by.x='Source', by.y='label', all.x = TRUE, all.y=TRUE)
edgeTable = merge(edgeTable, nT, by.x='Target', by.y='label', all.x = TRUE, all.y=TRUE)
edgeTable$edgeMiddle.lon = (edgeTable[[paste0('LonX', '.x')]]+edgeTable[[paste0('LonX', '.y')]])/2
edgeTable$edgeMiddle.lat = (edgeTable[[paste0('LatY', '.x')]]+edgeTable[[paste0('LatY', '.y')]])/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
NYCMafiaEdges %>% nrow()
eT = NYCMafiaEdges
nT = NYCMafiaNodes
edgeTable = merge(eT, nT, by.x='Source', by.y='label', all.x = TRUE, all.y=TRUE)
View(eT)
View(eT)
edgeTable = merge(eT, nT, by.x='Source', by.y='label', all.x = TRUE)
eT = NYCMafiaEdges
nT = NYCMafiaNodes
edgeTable = merge(eT, nT, by.x='Source', by.y='label', all.x = TRUE)
edgeTable = merge(edgeTable, nT, by.x='Target', by.y='label', all.x = TRUE)
edgeTable$edgeMiddle.lon = (edgeTable[[paste0('LonX', '.x')]]+edgeTable[[paste0('LonX', '.y')]])/2
edgeTable$edgeMiddle.lat = (edgeTable[[paste0('LatY', '.x')]]+edgeTable[[paste0('LatY', '.y')]])/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
edgeDistancefromEdgeTable = function(eT, nT, source_name, target_name, label_name, lon_name, lat_name) {
edgeTable = merge(eT, nT, by.x=source_name, by.y=label_name, all.x = TRUE)
edgeTable = merge(edgeTable, nT, by.x=target_name, by.y=label_name, all.x = TRUE)
edgeTable$edgeMiddle.lon = (edgeTable[[paste0(lon_name, '.x')]]+edgeTable[[paste0(lon_name, '.y')]])/2
edgeTable$edgeMiddle.lat = (edgeTable[[paste0(lat_name, '.x')]]+edgeTable[[paste0(lat_name, '.y')]])/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
edgeMiddleTable = as.data.frame(t(combn(edgeTable$EdgeMiddleLabels, 2)))
edgeMiddleTable = edgeMiddleTable[edgeMiddleTable$V1 != edgeMiddleTable$V2, ]
edgeMiddleTable$V1 = as.character(edgeMiddleTable$V1)
edgeMiddleTable$V2 = as.character(edgeMiddleTable$V2)
temp = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$V1, ',')))
temp2 = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$V2, ',')))
edgeMiddleTable$node1_lon = as.numeric(temp$V1)
edgeMiddleTable$node1_lat = as.numeric(temp$V2)
edgeMiddleTable$node2_lon = as.numeric(temp2$V1)
edgeMiddleTable$node2_lat = as.numeric(temp2$V2)
edgeMiddleTable$dist = sqrt((edgeMiddleTable$node1_lat - edgeMiddleTable$node2_lat)**2 + (edgeMiddleTable$node1_lon - edgeMiddleTable$node2_lon) **2)
return(edgeMiddleTable$dist)
}
kk = edgeDistancefromEdgeTable(NYCMafiaEdges, NYCMafiaNodes, 'Source', 'Target', 'label', 'LonX', 'LatY')
eT = NYCMafiaEdges
nT = NYCMafiaNodes
edgeTable = merge(eT, nT, by.x='Source', by.y='label', all.x = TRUE)
edgeTable = merge(edgeTable, nT, by.x='Target', by.y='label', all.x = TRUE)
edgeTable$edgeMiddle.lon = (edgeTable[[paste0('LonX', '.x')]]+edgeTable[[paste0('LonX', '.y')]])/2
edgeTable$edgeMiddle.lat = (edgeTable[[paste0('LatY', '.x')]]+edgeTable[[paste0('LatY', '.y')]])/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
946 * 945
946 * 945 / 2
edgeMiddleTable = as.data.frame(t(combn(edgeTable$EdgeMiddleLabels, 2)))
edgeMiddleTable = edgeMiddleTable[edgeMiddleTable$V1 != edgeMiddleTable$V2, ]
edgeMiddleTable$V1 = as.character(edgeMiddleTable$V1)
edgeMiddleTable$V2 = as.character(edgeMiddleTable$V2)
eT = NYCMafiaEdges
nT = NYCMafiaNodes
edgeTable = merge(eT, nT, by.x='Source', by.y='label', all.x = TRUE)
edgeTable = merge(edgeTable, nT, by.x='Target', by.y='label', all.x = TRUE)
edgeTable$edgeMiddle.lon = (edgeTable[[paste0('LonX', '.x')]]+edgeTable[[paste0('LonX', '.y')]])/2
edgeTable$edgeMiddle.lat = (edgeTable[[paste0('LatY', '.x')]]+edgeTable[[paste0('LatY', '.y')]])/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$Source, ',', edgeTable$Target)
edgeMiddleTable = as.data.frame(t(combn(edgeTable$EdgeMiddleLabels, 2)))
edgeMiddleTable = edgeMiddleTable[edgeMiddleTable$V1 != edgeMiddleTable$V2, ]
edgeMiddleTable$V1 = as.character(edgeMiddleTable$V1)
edgeMiddleTable$V2 = as.character(edgeMiddleTable$V2)
temp = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$V1, ',')))
temp2 = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$V2, ',')))
edgeMiddleTable$node1_lon = as.numeric(temp$V1)
edgeMiddleTable$node1_lat = as.numeric(temp$V2)
edgeMiddleTable$node2_lon = as.numeric(temp2$V1)
edgeMiddleTable$node2_lat = as.numeric(temp2$V2)
edgeMiddleTable$dist = sqrt((edgeMiddleTable$node1_lat - edgeMiddleTable$node2_lat)**2 + (edgeMiddleTable$node1_lon - edgeMiddleTable$node2_lon) **2)
edgeMiddleTable = as.data.frame(t(combn(edgeTable$EdgeMiddleLabels, 2)))
edgeMiddleTable = edgeMiddleTable[edgeMiddleTable$V1 != edgeMiddleTable$V2, ]
edgeMiddleTable$V1 = as.character(edgeMiddleTable$V1)
edgeMiddleTable$V2 = as.character(edgeMiddleTable$V2)
temp = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$V1, ',')))
temp2 = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$V2, ',')))
View(temp2)
edgeTable = merge(eT, nT, by.x='Source', by.y='label', all.x = TRUE)
edgeTable = merge(edgeTable, nT, by.x='Target', by.y='label', all.x = TRUE)
edgeTable$edgeMiddle.lon = (edgeTable[[paste0('LonX', '.x')]]+edgeTable[[paste0('LonX', '.y')]])/2
edgeTable$edgeMiddle.lat = (edgeTable[[paste0('LatY', '.x')]]+edgeTable[[paste0('LatY', '.y')]])/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$Source, ',', edgeTable$Target, ',', edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
edgeMiddleTable = as.data.frame(t(combn(edgeTable$EdgeMiddleLabels, 2)))
edgeMiddleTable$V1 = as.character(edgeMiddleTable$V1)
edgeMiddleTable$V2 = as.character(edgeMiddleTable$V2)
temp = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$V1, ',')))
temp2 = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$V2, ',')))
edgeMiddleTable$node1_lon = as.numeric(temp$V3)
edgeMiddleTable$node1_lat = as.numeric(temp$V4)
edgeMiddleTable$node2_lon = as.numeric(temp2$V3)
edgeMiddleTable$node2_lat = as.numeric(temp2$V4)
edgeMiddleTable$dist = sqrt((edgeMiddleTable$node1_lat - edgeMiddleTable$node2_lat)**2 + (edgeMiddleTable$node1_lon - edgeMiddleTable$node2_lon) **2)
946 * 945
946 * 945 / 2
allEdgesTable = as.data.frame(t(combn(NYCMafiaNodes$label, 2)))
allEdgesTable = allEdgesTable[allEdgesTable$V1 != allEdgesTable$V2, ]
allEdgesTable = allEdgesTable[!duplicated(allEdgesTable), ]
colnames(allEdgesTable) <- c('Source', 'Target')
allEdgesTable = as.data.frame(t(combn(NYCMafiaNodes$label, 2)))
298 * 287 / 2
allEdgesTable = as.data.frame(t(combn(NYCMafiaNodes$label, 2)))
298 * 297 / 2
44253 * 44252 / 2
kk2 = edgeDistancefromEdgeTable(allEdgesTable, NYCMafiaNodes, 'Source', 'Target', 'label', 'LonX', 'LatY')
edgeDistancefromEdgeTable = function(eT, nT, source_name, target_name, label_name, lon_name, lat_name) {
edgeTable = merge(eT, nT, by.x=source_name, by.y=label_name, all.x = TRUE)
edgeTable = merge(edgeTable, nT, by.x=target_name, by.y=label_name, all.x = TRUE)
edgeTable$edgeMiddle.lon = (edgeTable[[paste0(lon_name, '.x')]]+edgeTable[[paste0(lon_name, '.y')]])/2
edgeTable$edgeMiddle.lat = (edgeTable[[paste0(lat_name, '.x')]]+edgeTable[[paste0(lat_name, '.y')]])/2
edgeTable$EdgeMiddleLabels = paste0(edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
edgeTable$EdgeMiddleLabels = paste0(edgeTable$Source, ',', edgeTable$Target, ',', edgeTable$edgeMiddle.lon, ',', edgeTable$edgeMiddle.lat)
edgeMiddleTable = as.data.frame(t(combn(edgeTable$EdgeMiddleLabels, 2)))
edgeMiddleTable$V1 = as.character(edgeMiddleTable$V1)
edgeMiddleTable$V2 = as.character(edgeMiddleTable$V2)
temp = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$V1, ',')))
temp2 = as.data.frame(do.call(rbind, strsplit(edgeMiddleTable$V2, ',')))
edgeMiddleTable$node1_lon = as.numeric(temp$V3)
edgeMiddleTable$node1_lat = as.numeric(temp$V4)
edgeMiddleTable$node2_lon = as.numeric(temp2$V3)
edgeMiddleTable$node2_lat = as.numeric(temp2$V4)
edgeMiddleTable$dist = sqrt((edgeMiddleTable$node1_lat - edgeMiddleTable$node2_lat)**2 + (edgeMiddleTable$node1_lon - edgeMiddleTable$node))
return(edgeMiddleTable$dist)
}
kk2 = edgeDistancefromEdgeTable(allEdgesTable, NYCMafiaNodes, 'Source', 'Target', 'label', 'LonX', 'LatY')
eT = allEdgesTable
nT = NYCMafiaNodes
edgeTable = merge(eT, nT, by.x='Source', by.y='label', all.x = TRUE)
View(allEdgesTable)
colnames(allEdgesTable) <- c('Source', 'Target')
allEdgesTable = as.data.frame(t(combn(NYCMafiaNodes$label, 2)))
allEdgesTable = allEdgesTable[allEdgesTable$V1 != allEdgesTable$V2, ]
allEdgesTable = allEdgesTable[!duplicated(allEdgesTable), ]
colnames(allEdgesTable) <- c('Source', 'Target')
eT = allEdgesTable
edgeTable = merge(eT, nT, by.x='Source', by.y='label', all.x = TRUE)
allEdgesTable = as.data.frame(t(combn(NYCMafiaNodes$label, 2)))
allEdgesTable = allEdgesTable[allEdgesTable$V1 != allEdgesTable$V2, ]
allEdgesTable = allEdgesTable[!duplicated(allEdgesTable), ]
colnames(allEdgesTable) <- c('Source', 'Target')
kk2 = edgeDistancefromEdgeTable(allEdgesTable, NYCMafiaNodes, 'Source', 'Target', 'label', 'LonX', 'LatY')
allEdgesTable = as.data.frame(t(combn(NYCMafiaNodes$label, 2)))
allEdgesTable = allEdgesTable[allEdgesTable$V1 != allEdgesTable$V2, ]
allEdgesTable = allEdgesTable[!duplicated(allEdgesTable), ]
colnames(allEdgesTable) <- c('Source', 'Target')
44253 * 44252 / 2
298 * 297 / 2
44253 * 44252 / 2
# global significance
# NxDistanceSigTest
library(SSNtools)
data(NYCMafiaNodes)
data(NYCMafiaEdges)
# global significance
# NxDistanceSigTest
library(SSNtools)
data(NYCMafiaNodes)
data(NYCMafiaEdges)
edgeMiddleDistancefromEdgeTable = function(eT, nT, source_name, target_name, label_name, lon_name, lat_name) {
edgeTable = merge(eT, nT, by.x=source_name, by.y=label_name, all.x = TRUE)
edgeTable = merge(edgeTable, nT, by.x=target_name, by.y=label_name, all.x = TRUE)
edgeTable$dist = sqrt((edgeTable[[paste0(lon_name, '.x')]] - edgeTable[[paste0(lon_name, '.y')]])**2 + (edgeTable[[paste0(lat_name, '.x')]] - edgeTable[[paste0(lat_name, '.y')]])**2)
return(edgeTable$dist)
}
edgeDistancefromEdgeTable = function(eT, nT, source_name, target_name, label_name, lon_name, lat_name) {
edgeTable = merge(eT, nT, by.x=source_name, by.y=label_name, all.x = TRUE)
edgeTable = merge(edgeTable, nT, by.x=target_name, by.y=label_name, all.x = TRUE)
edgeTable$dist = sqrt((edgeTable[[paste0(lon_name, '.x')]] - edgeTable[[paste0(lon_name, '.y')]])**2 + (edgeTable[[paste0(lat_name, '.x')]] - edgeTable[[paste0(lat_name, '.y')]])**2)
return(edgeTable$dist)
}
edgeDistancefromEdgeTable(MafiaEdges, MafiaNodes, 'Source', 'Target', 'name', 'lon', 'lat')
edgeDistancefromEdgeTable(MafiaEdges, MafiaNodes, 'Source', 'Target', 'label', 'lon', 'lat')
edgeDistancefromEdgeTable(MafiaEdges, MafiaNodes, 'Source', 'Target', 'label', 'LonX', 'LatY')
edgeTable = merge(MafiaEdges, MafiaNodes, by.x='Source', by.y='label', all.x =TRUE)
colnames(MafiaNodes)
kk =edgeDistancefromEdgeTable(NYCMafiaEdges, NYCMafiaNodes, 'Source', 'Target', 'label', 'LonX', 'LatY')
kk
kk[kk<1000]
edgeDistancefromEdgeTable = function(eT, nT, source_name, target_name, label_name, lon_name, lat_name) {
edgeTable = merge(eT, nT, by.x=source_name, by.y=label_name, all.x = TRUE)
edgeTable = merge(edgeTable, nT, by.x=target_name, by.y=label_name, all.x = TRUE)
edgeTable$dist = sqrt((edgeTable[[paste0(lon_name, '.x')]] - edgeTable[[paste0(lon_name, '.y')]])**2 + (edgeTable[[paste0(lat_name, '.x')]] - edgeTable[[paste0(lat_name, '.y')]])**2)
return(edgeTable$dist)
}
allEdgesTable = as.data.frame(t(combn(NYCMafiaNodes$label, 2)))
allEdgesTable = allEdgesTable[allEdgesTable$V1 != allEdgesTable$V2, ]
allEdgesTable = allEdgesTable[!duplicated(allEdgesTable), ]
colnames(allEdgesTable) <- c('Source', 'Target')
ks.test(edgeDistancefromEdgeTable(NYCMafiaEdges, NYCMafiaNodes, 'Source', 'Target', 'label', 'LonX', 'LatY'),
edgeDistancefromEdgeTable(allEdgesTable, NYCMafiaNodes, 'Source', 'Target', 'label', 'LonX', 'LatY'))
edgeDistancefromEdgeTable = function(eT, nT, source_name, target_name, label_name, lon_name, lat_name) {
edgeTable = merge(eT, nT, by.x=source_name, by.y=label_name, all.x = TRUE)
edgeTable = merge(edgeTable, nT, by.x=target_name, by.y=label_name, all.x = TRUE)
edgeTable$dist = sqrt((edgeTable[[paste0(lon_name, '.x')]] - edgeTable[[paste0(lon_name, '.y')]])**2 + (edgeTable[[paste0(lat_name, '.x')]] - edgeTable[[paste0(lat_name, '.y')]])**2)
return(edgeTable$dist)
}
data(POINodes)
data(POIEdges)
colnames(POINodes)
data(POINodes)
data(POIEdges)
allEdgesTable = as.data.frame(t(combn(POINodes$label, 2)))
allEdgesTable = allEdgesTable[allEdgesTable$V1 != allEdgesTable$V2, ]
allEdgesTable = allEdgesTable[!duplicated(allEdgesTable), ]
colnames(allEdgesTable) <- c('Source', 'Target')
ks.test(edgeDistancefromEdgeTable(POIEdges, POINodes, 'Source', 'Target', 'label', 'LonX', 'LatY'),
edgeDistancefromEdgeTable(allEdgesTable, POINodes, 'Source', 'Target', 'label', 'LonX', 'LatY'))
data(NYCMafiaNodes)
data(NYCMafiaEdges)
nodes = processNode(NYCMafiaNodes, 'label', 'LonX', 'LatY')
edges = processEdge(NYCMafiaEdges, 'Source', 'Target')
start_time <- Sys.time()
heat = NDScanRadius(nodes, edges, 500, 5)[[1]]
end_time <- Sys.time()
end_time - start_time
nodes = processNode(POINodes, 'label', 'LonX', 'LatY', 'Bipartite')
edges = processEdge(POIEdges, 'Source', 'Target', 'Weight')
temp = NDScanRadius(nodes, edges, 1000, min=1, directed=FALSE, bipartite=TRUE)
nodes = processNode(POINodes, 'label', 'LonX', 'LatY', 'Bipartite')
edges = processEdge(POIEdges, 'Source', 'Target', 'Weight')
start_time <- Sys.time()
temp = NDScanRadius(nodes, edges, 1000, min=1, directed=FALSE, bipartite=TRUE)
heat = temp[[1]]
end_time <- Sys.time()
end_time - start_time
