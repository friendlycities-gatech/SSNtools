tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile') #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
#-----Getis-Ord------#
library(spdep)
library(raster)
# Create a regular grid of 100
pixelsize = 500
box = round(extent(heat) / pixelsize) * pixelsize
template = raster(box, crs = 26967,
nrows = (box@ymax - box@ymin) / pixelsize,
ncols = (box@xmax - box@xmin) / pixelsize)
heat$PRESENT = 1
getisraster = rasterize(heat, template, field = 'PRESENT', fun = sum)
getisgrid = rasterToPolygons(getisraster)
# Create the list of neighbors
neighbors = poly2nb(getisgrid)
weighted_neighbors = nb2listw(neighbors, zero.policy=T)
# Perform the local G analysis (Getis-Ord GI*)
getisgrid$HOTSPOT = as.vector(localG(getisgrid$layer, weighted_neighbors))
getisgrid = getisgrid %>% st_as_sf()
# tm_shape(st_read('Data/bg_atl_socio.shp') %>% filter(GEOID %in% unique(POINodes$label))) +
#   tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tmap_mode('view')
tm_shape(getisgrid %>% filter(HOTSPOT <= 1.65)) +
tm_polygons(alpha=0, border.col='grey') +
tm_shape(getisgrid %>% filter(HOTSPOT > 1.65)) +
tm_polygons(alpha=0, border.col='darkred', lwd=3) +
# tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
# tm_lines(alpha=0.5) +
tm_shape(heat %>% filter(heat <= 0.5)) +
tm_symbols(size=0.05, col='grey') +
tm_shape(heat %>% filter(heat > 0.5)) +
tm_symbols(size=0.1, col='heat', style='fixed', breaks=c(0, 0.25, 0.5, 0.75, 1))
# tm_shape(st_read('Data/bg_atl_socio.shp') %>% filter(GEOID %in% unique(POINodes$label))) +
#   tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tmap_mode('plot')
tm_shape(getisgrid %>% filter(HOTSPOT <= 1.65)) +
tm_polygons(alpha=0, border.col='grey') +
tm_shape(getisgrid %>% filter(HOTSPOT > 1.65)) +
tm_polygons(alpha=0, border.col='darkred', lwd=3) +
# tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
# tm_lines(alpha=0.5) +
tm_shape(heat %>% filter(heat <= 0.5)) +
tm_symbols(size=0.05, col='grey') +
tm_shape(heat %>% filter(heat > 0.5)) +
tm_symbols(size=0.1, col='heat', style='fixed', breaks=c(0, 0.25, 0.5, 0.75, 1))
tm_shape(getisgrid %>% filter(HOTSPOT <= 1.65)) +
tm_polygons(alpha=0, border.col='grey') +
tm_shape(getisgrid %>% filter(HOTSPOT > 1.65)) +
tm_polygons(alpha=0, border.col='darkred', lwd=3) +
# tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
# tm_lines(alpha=0.5) +
tm_shape(heat %>% filter(heat <= 0.5)) +
tm_symbols(size=0.05, col='grey') +
tm_shape(heat %>% filter(heat > 0.5)) +
tm_symbols(size=0.2, col='heat', style='fixed', breaks=c(0, 0.25, 0.5, 0.75, 1))
heat = temp2[[1]]
edgeWithin = temp2[[2]]
heat = heat %>% left_join(POINodes, copy=FALSE) %>% st_as_sf(coords=c('LonX', 'LatY'), crs=26967)
edgeWithin = edgeWithin %>% left_join(POINodes, by=c('Source' = 'label'), copy=FALSE) %>% left_join(POINodes, by=c('Target' = 'label'), copy=FALSE)
st_segment = function(r){st_linestring(t(matrix(unlist(r), 2, 2)))}
edgeWithin$geometry = st_sfc(sapply(1:nrow(edgeWithin),
function(i){st_segment(edgeWithin[i,][c('LonX.x', 'LatY.x', 'LonX.y', 'LatY.y')])},simplify=FALSE))
edgeWithin = edgeWithin %>% st_as_sf() %>% st_set_crs(26967)
tmap_mode('view')
tm_shape(st_read('Data/bg_atl_socio.shp') %>% filter(GEOID %in% unique(POINodes$label))) +
tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile') #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
# tm_shape(st_read('Data/bg_atl_socio.shp') %>% filter(GEOID %in% unique(POINodes$label))) +
#   tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tmap_mode('plot')
tm_shape(getisgrid %>% filter(HOTSPOT <= 1.65)) +
tm_polygons(alpha=0, border.col='grey') +
tm_shape(getisgrid %>% filter(HOTSPOT > 1.65)) +
tm_polygons(alpha=0, border.col='darkred', lwd=3) +
# tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
# tm_lines(alpha=0.5) +
tm_shape(heat %>% filter(heat <= 0.5)) +
tm_symbols(size=0.05, col='grey') +
tm_shape(heat %>% filter(heat > 0.5)) +
tm_symbols(size=0.2, col='heat', style='fixed', breaks=c(0, 0.25, 0.5, 0.75, 1))
# tm_shape(st_read('Data/bg_atl_socio.shp') %>% filter(GEOID %in% unique(POINodes$label))) +
#   tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tmap_mode('view')
tm_shape(getisgrid %>% filter(HOTSPOT <= 1.65)) +
tm_polygons(alpha=0, border.col='grey') +
tm_shape(getisgrid %>% filter(HOTSPOT > 1.65)) +
tm_polygons(alpha=0, border.col='darkred', lwd=3) +
# tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
# tm_lines(alpha=0.5) +
tm_shape(heat %>% filter(heat <= 0.5)) +
tm_symbols(size=0.05, col='grey') +
tm_shape(heat %>% filter(heat > 0.5)) +
tm_symbols(size=0.2, col='heat', style='fixed', breaks=c(0, 0.25, 0.5, 0.75, 1))
tm_shape(getisgrid %>% filter(HOTSPOT <= 1.65)) +
tm_polygons(alpha=0, border.col='grey') +
tm_shape(getisgrid %>% filter(HOTSPOT > 1.65)) +
tm_polygons(alpha=0, border.col='darkred', lwd=3) +
# tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
# tm_lines(alpha=0.5) +
tm_shape(heat %>% filter(heat <= 0.5)) +
tm_symbols(size=0.05, col='grey') +
tm_shape(heat %>% filter(heat > 0.5)) +
tm_symbols(size=0.2, col='heat', style='fixed', breaks=c(0, 0.25, 0.5, 0.75, 1),
palette=c('#800F26', '#E3211C', '#FEB24B', '#FFEDA0'),
legend.col.show = FALSE) +
tm_add_legend(type=c('symbols'), col=c('#800F26'))
tm_shape(getisgrid %>% filter(HOTSPOT <= 1.65)) +
tm_polygons(alpha=0, border.col='grey') +
tm_shape(getisgrid %>% filter(HOTSPOT > 1.65)) +
tm_polygons(alpha=0, border.col='darkred', lwd=3) +
# tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
# tm_lines(alpha=0.5) +
tm_shape(heat %>% filter(heat <= 0.5)) +
tm_symbols(size=0.05, col='grey') +
tm_shape(heat %>% filter(heat > 0.5)) +
tm_symbols(size=0.2, col='heat', style='fixed', breaks=c(0, 0.25, 0.5, 0.75, 1),
palette=c('#800F26', '#E3211C', '#FEB24B', '#FFEDA0'),
legend.col.show = FALSE) +
tm_add_legend(type=c('symbol'), col=c('#800F26'))
tm_shape(getisgrid %>% filter(HOTSPOT <= 1.65)) +
tm_polygons(alpha=0, border.col='grey') +
tm_shape(getisgrid %>% filter(HOTSPOT > 1.65)) +
tm_polygons(alpha=0, border.col='darkred', lwd=3) +
# tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
# tm_lines(alpha=0.5) +
tm_shape(heat %>% filter(heat <= 0.5)) +
tm_symbols(size=0.05, col='grey') +
tm_shape(heat %>% filter(heat > 0.5)) +
tm_symbols(size=0.2, col='heat', style='fixed', breaks=c(0, 0.25, 0.5, 0.75, 1),
palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),
legend.col.show = FALSE) +
tm_add_legend(type=c('symbol'), col=c('#E3211C', '#800F26'))
tm_shape(st_read('Data/bg_atl_socio.shp') %>% filter(GEOID %in% unique(POINodes$label))) +
tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
tm_shape(getisgrid %>% filter(HOTSPOT <= 1.65)) +
tm_polygons(alpha=0, border.col='grey') +
tm_shape(getisgrid %>% filter(HOTSPOT > 1.65)) +
tm_polygons(alpha=0, border.col='darkred', lwd=3) +
# tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
# tm_lines(alpha=0.5) +
tm_shape(heat %>% filter(heat <= 0.5)) +
tm_symbols(size=0.05, col='grey') +
tm_shape(heat %>% filter(heat > 0.5)) +
tm_symbols(size=0.2, col='heat', style='fixed', breaks=c(0, 0.25, 0.5, 0.75, 1),
palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'))
tm_shape(getisgrid %>% filter(HOTSPOT <= 1.65)) +
tm_polygons(alpha=0, border.col='grey') +
tm_shape(getisgrid %>% filter(HOTSPOT > 1.65)) +
tm_polygons(alpha=0, border.col='darkred', lwd=3) +
# tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
# tm_lines(alpha=0.5) +
tm_shape(heat %>% filter(heat <= 0.5)) +
tm_symbols(size=0.05, col='grey') +
tm_shape(heat %>% filter(heat > 0.5)) +
tm_symbols(size=0.2, col='heat', style='fixed', breaks=c(0, 0.25, 0.5, 0.75, 1),
palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26')) +
tm_add_legend("fill", labels=c('>0.5'), alpha=0, border.col = 'darkred', border.lwd = 3)
# tm_shape(st_read('Data/bg_atl_socio.shp') %>% filter(GEOID %in% unique(POINodes$label))) +
#   tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tmap_mode('plot')
tm_shape(getisgrid %>% filter(HOTSPOT <= 1.65)) +
tm_polygons(alpha=0, border.col='grey') +
tm_shape(getisgrid %>% filter(HOTSPOT > 1.65)) +
tm_polygons(alpha=0, border.col='darkred', lwd=3) +
# tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
# tm_lines(alpha=0.5) +
tm_shape(heat %>% filter(heat <= 0.5)) +
tm_symbols(size=0.05, col='grey') +
tm_shape(heat %>% filter(heat > 0.5)) +
tm_symbols(size=0.2, col='heat', style='fixed', breaks=c(0, 0.25, 0.5, 0.75, 1),
palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26')) +
tm_add_legend("fill", labels=c('>0.5'), alpha=0, border.col = 'darkred', border.lwd = 3)
tm_shape(getisgrid %>% filter(HOTSPOT <= 1.65)) +
tm_polygons(alpha=0, border.col='grey') +
tm_shape(getisgrid %>% filter(HOTSPOT > 1.65)) +
tm_polygons(alpha=0, border.col='darkred', lwd=3) +
# tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
# tm_lines(alpha=0.5) +
tm_shape(heat %>% filter(heat <= 0.5)) +
tm_symbols(size=0.05, col='grey') +
tm_shape(heat %>% filter(heat > 0.5)) +
tm_symbols(size=0.2, col='heat', style='fixed', breaks=c(0, 0.25, 0.5, 0.75, 1),
palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26')) +
tm_add_legend("fill", labels=c('Hot Spot - 90% Confidence'), alpha=0, border.col = 'darkred', border.lwd = 3)
# Create the list of neighbors
neighbors = poly2nb(getisgrid)
weighted_neighbors = nb2listw(neighbors, zero.policy=F)
# tm_shape(st_read('Data/bg_atl_socio.shp') %>% filter(GEOID %in% unique(POINodes$label))) +
#   tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tmap_mode('view')
tm_shape(getisgrid %>% st_as_sf()) +
tm_polygons(alpha=0)
tm_shape(getisgrid %>% st_as_sf()) +
tm_polygons(alpha=0)
tm_shape(heat) %>%
tm_symbols() + tm_shape(getisgrid %>% st_as_sf()) +
tm_polygons(alpha=0)
tm_shape(heat) %>%
tm_symbols() +
tm_shape(getisgrid %>% st_as_sf()) +
tm_polygons(alpha=0)
View(heat)
tm_shape(heat) +
tm_symbols() +
tm_shape(getisgrid %>% st_as_sf()) +
tm_polygons(alpha=0)
tm_shape(heat) +
tm_symbols(size=0.01) +
tm_shape(getisgrid %>% st_as_sf()) +
tm_polygons(alpha=0)
# Create the list of neighbors
neighbors = poly2nb(getisgrid)
weighted_neighbors = nb2listw(neighbors, zero.policy=T)
# Perform the local G analysis (Getis-Ord GI*)
getisgrid$HOTSPOT = as.vector(localG(getisgrid$layer, weighted_neighbors))
getisgrid = getisgrid %>% st_as_sf()
tm_shape(heat) +
tm_symbols(size=0.01) +
tm_shape(getisgrid %>% st_as_sf()) +
tm_polygons(alpha=0)
# tm_shape(st_read('Data/bg_atl_socio.shp') %>% filter(GEOID %in% unique(POINodes$label))) +
#   tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tmap_mode('view')
tm_shape(getisgrid %>% filter(HOTSPOT <= 1.65)) +
tm_polygons(alpha=0, border.col='grey') +
tm_shape(getisgrid %>% filter(HOTSPOT > 1.65)) +
tm_polygons(alpha=0, border.col='darkred', lwd=3) +
# tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
# tm_lines(alpha=0.5) +
tm_shape(heat %>% filter(heat <= 0.5)) +
tm_symbols(size=0.05, col='grey') +
tm_shape(heat %>% filter(heat > 0.5)) +
tm_symbols(size=0.2, col='heat', style='fixed', breaks=c(0, 0.25, 0.5, 0.75, 1),
palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26')) +
tm_add_legend("fill", labels=c('Hot Spot - 90% Confidence'), alpha=0, border.col = 'darkred', border.lwd = 3)
tm_shape(getisgrid %>% filter(HOTSPOT <= 1.65 | is.na(HOTSPOT))) +
tm_polygons(alpha=0, border.col='grey') +
tm_shape(getisgrid %>% filter(HOTSPOT > 1.65)) +
tm_polygons(alpha=0, border.col='darkred', lwd=3) +
# tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
# tm_lines(alpha=0.5) +
tm_shape(heat %>% filter(heat <= 0.5)) +
tm_symbols(size=0.05, col='grey') +
tm_shape(heat %>% filter(heat > 0.5)) +
tm_symbols(size=0.2, col='heat', style='fixed', breaks=c(0, 0.25, 0.5, 0.75, 1),
palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26')) +
tm_add_legend("fill", labels=c('Hot Spot - 90% Confidence'), alpha=0, border.col = 'darkred', border.lwd = 3)
# tm_shape(st_read('Data/bg_atl_socio.shp') %>% filter(GEOID %in% unique(POINodes$label))) +
#   tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tmap_mode('plot')
tm_shape(getisgrid %>% filter(HOTSPOT <= 1.65 | is.na(HOTSPOT))) +
tm_polygons(alpha=0, border.col='grey') +
tm_shape(getisgrid %>% filter(HOTSPOT > 1.65)) +
tm_polygons(alpha=0, border.col='darkred', lwd=3) +
# tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
# tm_lines(alpha=0.5) +
tm_shape(heat %>% filter(heat <= 0.5)) +
tm_symbols(size=0.05, col='grey') +
tm_shape(heat %>% filter(heat > 0.5)) +
tm_symbols(size=0.2, col='heat', style='fixed', breaks=c(0, 0.25, 0.5, 0.75, 1),
palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26')) +
tm_add_legend("fill", labels=c('Hot Spot - 90% Confidence'), alpha=0, border.col = 'darkred', border.lwd = 3)
setwd('/Users/xiaofanliang/Dropbox (GaTech)/GT_Research/Edge_Scan/')
library(tidyverse)
library(sf)
library(tmap)
library(dplyr)
library(SSNtools)
data(POINodes)
data(POIEdges)
nodes = processNode(POINodes, 'label', 'LonX', 'LatY', 'Bipartite')
edges = processEdge(POIEdges, 'Source', 'Target', 'Weight')
temp = NDScanRadius(nodes, edges, 1000, min=1, directed=FALSE, bipartite=TRUE)
temp2 = NDScanKNearest(nodes, edges, 4, directed=FALSE, bipartite=TRUE)
heat = temp2[[1]]
edgeWithin = temp2[[2]]
heat = heat %>% left_join(POINodes, copy=FALSE) %>% st_as_sf(coords=c('LonX', 'LatY'), crs=26967)
edgeWithin = edgeWithin %>% left_join(POINodes, by=c('Source' = 'label'), copy=FALSE) %>% left_join(POINodes, by=c('Target' = 'label'), copy=FALSE)
st_segment = function(r){st_linestring(t(matrix(unlist(r), 2, 2)))}
edgeWithin$geometry = st_sfc(sapply(1:nrow(edgeWithin),
function(i){st_segment(edgeWithin[i,][c('LonX.x', 'LatY.x', 'LonX.y', 'LatY.y')])},simplify=FALSE))
edgeWithin = edgeWithin %>% st_as_sf() %>% st_set_crs(26967)
tmap_mode('view')
tm_shape(st_read('Data/bg_atl_socio.shp') %>% filter(GEOID %in% unique(POINodes$label))) +
tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
#base map
token = 'pk.eyJ1IjoieHhmZmxsIiwiYSI6ImNrOTkzeWdpaDBya2QzbHF4b2lrdWJsdTkifQ.yScYDn4ssO0b9h1mRYzEhA'
set_defaults(map_service = "mapbox", map_type = "light", map_token = token)
library(basemaps)
set_defaults(map_service = "mapbox", map_type = "light", map_token = token)
cbgshp = st_read('Data/bg_atl_socio.shp') %>% filter(GEOID %in% unique(POINodes$label))
bgbox = st_bbox(cbg) %>% st_as_sfc()
bgbox = st_bbox(cbg) %>% st_as_sfc()
bgbox = st_bbox(cbgshp) %>% st_as_sfc()
bg = basemap_stars(bgbox, map_service = 'carto')
tmap_mode('plot')
tm_shape(bg) +
tm_rgb() +
tm_shape(cbg) +
tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
tmap_mode('plot')
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
bg = basemap_stars(bgbox, map_service = 'mapbox')
tmap_mode('plot')
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
bg = basemap_stars(bgbox, map_service = 'carto')
tmap_mode('plot')
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
tm_shape(bg) +
tm_rgb(alpha=0.5) +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha=0.1) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha= 0.1) +
tm_shape(cbgshp %>% st_combined()) +
tm_polygons(alpha=0, border.col = 'black', border.alpha = 0.5) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha= 0.1) +
tm_shape(cbgshp %>% st_combine()) +
tm_polygons(alpha=0, border.col = 'black', border.alpha = 0.5) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha= 0.1) +
tm_shape(cbgshp %>% st_combine() %>% st_union()) +
tm_polygons(alpha=0, border.col = 'black', border.alpha = 0.5) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha= 0.1) +
tm_shape(cbgshp %>% st_combine(by_feature = FALSE)) +
tm_polygons(alpha=0, border.col = 'black', border.alpha = 0.5) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha= 0.1) +
tm_shape(cbgshp %>% st_union(by_feature = FALSE)) +
tm_polygons(alpha=0, border.col = 'black', border.alpha = 0.5) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha= 0.1) +
tm_shape(cbgshp %>% st_union(by_feature = FALSE)) +
tm_polygons(alpha=0, border.col = 'black', border.alpha = 0.5, lwd=2) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha= 0.1) +
tm_shape(cbgshp %>% st_union(by_feature = FALSE)) +
tm_polygons(alpha=0, border.col = 'black', border.alpha = 0.2, lwd=2) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha= 0.05) +
tm_shape(cbgshp %>% st_union(by_feature = FALSE)) +
tm_polygons(alpha=0, border.col = 'black', border.alpha = 0.2, lwd=2) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
legend_name = 'Network Density'
k = '4'
breaks = c(0.08, 0.30, 0.40, 0.47, 1)
tmap_mode('plot')
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha= 0.05) +
tm_shape(cbgshp %>% st_union(by_feature = FALSE)) +
tm_polygons(alpha=0, border.col = 'black', border.alpha = 0.2, lwd=2) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(col='heat', size=0.05, style='fixed', legend.col.show = FALSE, palette = c('#FBD977', '#F78D3D', '#E3211B', '#800F26'),
breaks=breaks) +
tm_add_legend(type='symbol', labels=labels, col=c('#FBD977', '#F78D3D', '#E3211B', '#800F26'),
title=paste0(legend_name, ' (KNN = ', k, ')'), size=0.5) +
tm_symbols(size=0.1, col='heat', style='quantile', palette=c('#FFEDA0', '#FEB24B', '#E3211C', '#800F26'),) #edgeScan  breaks=c(0, 1, 500, 1000, 2000, 3500)
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha= 0.05) +
tm_shape(cbgshp %>% st_union(by_feature = FALSE)) +
tm_polygons(alpha=0, border.col = 'black', border.alpha = 0.2, lwd=2) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(col='heat', size=0.05, style='fixed', legend.col.show = FALSE, palette = c('#FBD977', '#F78D3D', '#E3211B', '#800F26'),
breaks=breaks) +
tm_add_legend(type='symbol', labels=labels, col=c('#FBD977', '#F78D3D', '#E3211B', '#800F26'),
title=paste0(legend_name, ' (KNN = ', k, ')'), size=0.5) #+
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha= 0.05) +
tm_shape(cbgshp %>% st_union(by_feature = FALSE)) +
tm_polygons(alpha=0, border.col = 'black', border.alpha = 0.2, lwd=2) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(col='heat', size=0.05, style='fixed', legend.col.show = FALSE, palette = c('#FBD977', '#F78D3D', '#E3211B', '#800F26'),
breaks=breaks) +
tm_add_legend(type='symbol', labels=labels, col=c('#FBD977', '#F78D3D', '#E3211B', '#800F26'),
title=paste0(legend_name, ' (KNN = ', k, ')'), size=0.5) #+
legend_name = 'Network Density'
k = '4'
breaks = c(0.08, 0.30, 0.40, 0.47, 1)
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha= 0.05) +
tm_shape(cbgshp %>% st_union(by_feature = FALSE)) +
tm_polygons(alpha=0, border.col = 'black', border.alpha = 0.2, lwd=2) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(col='heat', size=0.05, style='fixed', legend.col.show = FALSE, palette = c('#FBD977', '#F78D3D', '#E3211B', '#800F26'),
breaks=breaks)
tm_shape(bg) +
tm_rgb() +
tm_shape(cbgshp) +
tm_polygons(alpha=0, border.col = 'black', border.alpha= 0.05) +
tm_shape(cbgshp %>% st_union(by_feature = FALSE)) +
tm_polygons(alpha=0, border.col = 'black', border.alpha = 0.2, lwd=2) +
tm_shape(edgeWithin %>% filter(WithinWindow == 1)) +
tm_lines(alpha=0.5) +
tm_shape(heat) +
tm_symbols(col='heat', size=0.1, style='fixed', legend.col.show = FALSE, palette = c('#FBD977', '#F78D3D', '#E3211B', '#800F26'),
breaks=breaks) +
tm_add_legend(type='symbol', labels=labels, col=c('#FBD977', '#F78D3D', '#E3211B', '#800F26'),
title=paste0(legend_name, ' (KNN = ', k, ')'), size=0.5) #+
